#version 430

layout (location = 0) in  vec3 VertexPosition;
layout (location = 1) in  vec3 VertexNormal;
layout (location = 2) in  vec2 VertexCoord;

out vec4 Position;
out vec3 Normal;
out vec2 Texcoord;

uniform mat4 ModelViewMatrix;
uniform mat3 NormalMatrix;
uniform mat4 MVP;                // Projection * Modelview


uniform float Time;

// Wave parameters
uniform float K         = 2.5;   // Wavenumber (2PI/Lambda)
uniform float Velocity  = 2.5;
uniform float Amplitude = 0.6;

void main()
{
    vec4 pos = vec4(VertexPosition, 1.0);

    // Translate the y coordinate
    float u  = K * (pos.x - Velocity * Time);
    pos.y    = Amplitude * sin(u);

    // Compute the normal vector
    vec3 n   = vec3(0.0);
    n.xy     = normalize (vec2(-K * Amplitude * cos(u), 1.0));

    // Convert normal and position to eye coords.
    Normal    = normalize(NormalMatrix * n);
    Position  = ModelViewMatrix * pos;
    Texcoord  = VertexCoord;

    gl_Position = MVP * pos;
}
